@use "../src/scss/variables";
@use "../src/scss/mixins" as mixin;
@use "../src/scss/reset";

body {
  background-color: var(--clr-bg);
  color: var(--clr-whiteFaded);
  min-width: 100dvh;
}

// HomeLayout Styling

.navbar {
  width: 100%;
  height: var(--layout-height);
  @include mixin.myFlex(space-between);
  padding-inline: var(--pd-x);

  .logo {
    font-family: var(--ff-logo);
    font-size: var(--fs-5);
    font-weight: var(--fw-bold);

    color: var(--clr-green);
    text-shadow: 0 0 2.125rem var(--clr-green);
  }

  .nav-links {
    @include mixin.myFlex();
    gap: 2rem;
    font-weight: var(--fw-regular);
    font-size: var(--fs-0);
  }
  .nav-link {
    color: var(--clr-greenFaded);
  }
  .active {
    color: var(--clr-green);
    text-shadow: 0 0 0.35rem var(--clr-green);
  }
}

.footer {
  width: 100%;
  @include mixin.myFlex();
  height: var(--layout-height);

  a {
    color: var(--clr-green);
    text-shadow: 0 0 0.35rem var(--clr-greenFaded);
  }
}

.landing-spinner {
  @include mixin.myFlex(space-around);
  width: 100%;
  height: calc(100dvh - (var(--layout-height) * 2));

  .center {
    width: 4rem;
    aspect-ratio: 1;
    background-color: var(--clr-green);
    box-shadow: 0px 0px 7px var(--clr-greenFaded);
  }
  .inner {
    // width: 14rem;
    // height: 14rem;
    // background-color: var(--clr-green);
    // position: relative;
    // transform-origin: center center;
    // animation: rotator 7s linear infinite;
    width: 4rem;
    aspect-ratio: 1;
    // background-color: lightblue;
    // border-radius: 100%;
    position: relative;

    animation: rotator 15s linear infinite;
  }

  .outer {
    --size: 2rem;
    --circleRadius: 100px;

    position: absolute;
    top: calc(var(--size) / 2);
    left: calc(var(--size) / 2);
    width: var(--size);
    aspect-ratio: 1;
    // border-radius: 100%;
    background-color: var(--clr-orange);
    transform: translate(
      calc(cos(var(--degrees)) * 100px),
      calc((sin(var(--degrees)) * var(--circleRadius)))
    );
  }

  $outerElements: 6;
  @for $i from 1 through $outerElements {
    .outer:nth-of-type(#{$i}) {
      --degrees: #{$i} * (360deg / #{$outerElements});
    }
  }
}

@keyframes rotator {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
